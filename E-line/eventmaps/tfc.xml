<?xml version="1.0" ?>
<!-- Event map for TFC 1.5

This file instructs Admin Mod how to convert server messages into events that
plugins can use. See docs/EventsReadme for more information.

-->

<eventmap game="tfc" log="false">
	
	<event name="player_spawn">
		<description>
			A player first spawns on connecting at the point their client enters the
			3d world, but they spawn "dead" (use the player_info function to determine
			if a player is dead). Subsequently they spawn "alive" when their player
			respawns in the game (for the first time or for a new round). Players can
			also spawn dead if the are too slow changing team.  Players on the spectator
			team do not spawn. NOTE: A player can sometimes spawn twice on joining if
			they join near the start of a round - first they spawn dead as they enter the
			3d world, then the spawn alive after joining a team and choosing a model.
		</description>
		<argument name="UserIndex" type="integer"/>
	</event>

	<event name="player_team">
		<description>
			Player has joined a team on connecting or they have swapped teams.
			Automatic is 1 if the player was swapped teams by the game to balance
			them. It is not 1 for choosing autoselect when connecting/swapping or
			if an administrator swaps the players' team using admin mod.
		</description>

		<argument name="UserIndex" type="integer"/>
		<argument name="Team" type="integer"/>		
		<argument name="Automatic" type="integer"/>
	</event>


	<event name="player_damage">
		<argument name="UserIndex" type="integer"/>
		<argument name="AttackerIndex" type="integer"/>
		<argument name="Amount" type="integer"/>		
	</event>
	
	<event name="player_health">
		<description>
			A player's Health changed for any reason. This inlcudes reseting their
			health on respawning.
		</description>
		<argument name="UserIndex" type="integer"/>
		<argument name="Health" type="integer"/>
	</event>

	<event name="player_death">
		<description>
			A player died for any reason (does not include disconnecting).
			For a suicide, KillerIndex == Victimindex and HLReason contains
			"world" or "worldspawn". For killings, HLReason contains the
			weapon used.
		</description>
	    
		<argument name="VictimIndex" type="integer"/>
		<argument name="Reason" type="string"/>
		<argument name="KillerIndex" type="integer"/>
		<argument name="Headshot" type="integer"/>
	</event>
	
	<event name="player_score">
		<description>A players score has changed.</description>
		<argument name="UserIndex" type="integer"/>
		<argument name="Kills" type="integer"/>
		<argument name="Deaths" type="integer"/>
	</event>
		


	<event name="weapon_pickup">
		<argument name="UserIndex" type="integer"/>
		<argument name="Weapon" type="integer"/>
	</event>

	<event name="ammo_pickup">
		<argument name="UserIndex" type="integer"/>
		<argument name="Type" type="integer"/>
		<argument name="Quantity" type="integer"/>
	</event>
	
	<event name="item_pickup">
		<argument name="UserIndex" type="integer"/>
		<argument name="Name" type="string"/>
	</event>
	
	<event name="weapon_stored">
		<argument name="UserIndex" type="integer"/>
		<argument name="Weapon" type="integer"/>
		<argument name="Ammo" type="integer"/>
	</event>
	
	<event name="weapon_change">
		<argument name="UserIndex" type="integer"/>
		<argument name="Weapon" type="integer"/>
		<argument name="Ammo" type="integer"/>
	</event>

	<event name="ammo_change">
		<argument name="UserIndex" type="integer"/>
		<argument name="Weapon" type="integer"/>
		<argument name="Ammo" type="integer"/>
	</event>


	<event name="flag_pickup">
		<argument name="UserIndex" type="integer"/>
		<argument name="Team" type="integer"/>		
	</event>

	<event name="flag_dropped">
		<argument name="UserIndex" type="integer"/>
		<argument name="Team" type="integer"/>		
	</event>

	<event name="grenade_held">
		<argument name="UserIndex" type="integer"/>
		<argument name="Type" type="string"/>		
	</event>

	<event name="grenade_thrown">		     
		<argument name="UserIndex" type="integer"/>
		<argument name="Type" type="string"/>		
	</event>
	
	<event name="detpack_planting">
		<argument name="UserIndex" type="integer"/>
		<argument name="Duration" type="integer"/>
	</event>
	
	<event name="detpack_planted">
		<argument name="UserIndex" type="integer"/>
	</event>
	
	<event name="detpack_aborted">
		<argument name="UserIndex" type="integer"/>
	</event>

	<event name="detpack_exploded">
		<argument name="UserIndex" type="integer"/>
	</event>
	
	<event name="build_start">
		<argument name="UserIndex" type="integer"/>
	</event>
	
	<event name="build_illegal">
		<argument name="UserIndex" type="integer"/>
	</event>

	<event name="build_complete">
		<argument name="UserIndex" type="integer"/>
		<argument name="Type" type="string"/>
	</event>
	
	<event name="build_aborted">
		<argument name="UserIndex" type="integer"/>
	</event>
	
	<event name="build_dismantle">
		<argument name="UserIndex" type="integer"/>
		<argument name="Type" type="string"/>
	</event>

	<event name="build_destroy">
		<argument name="UserIndex" type="integer"/>
		<argument name="Type" type="string"/>
	</event>
	
	<event name="build_upgrade">
		<argument name="UserIndex" type="integer"/>
		<argument name="Type" type="string"/>
		<argument name="Level" type="integer"/>
	</event>
	
	<event name="team_score">
		<argument name="Team" type="integer"/>
		<argument name="Score" type="integer"/>
		<argument name="Deaths" type="integer"/>
	</event>

	<!-- A nice simple example to start with. When a DeathMsg message occurs,
	     raise a death event, and copy the copys. Order is slightly different
	     so death event for other mods can have the first 3 copys in the same
	     order -->	    
	<message name="DeathMsg" event="player_death">
		<copy type="integer" writeargument="Headshot" value="0"/>
		<element type="integer">
			<copy type="integer" writeargument="KillerIndex" />
		</element>
		<element type="integer">
			<copy type="integer" writeargument="VictimIndex" />
		</element>		
		<element type="string">
			<copy type="string" writeargument="Reason" />
			<option value="headshot">
				<copy type="integer" writeargument="Headshot" value="1"/>
			</option>
		</element>
	</message>

	<!-- Captures a health change. This uses a new feature - the copy in
	     inthe message tag instead of the element tag means capture the player
	     that sent the message -->
	<message name="Health" event="player_health">
		<copy type="integer" writeargument="UserIndex"/>
		<element type="integer">
			<copy type="integer" writeargument="Health" />
		</element>	
	</message>

	<message name="Damage" event="player_damage">
		<variable name="attackerX" type="float"/>
		<variable name="attackerY" type="float"/>
		<variable name="attackerZ" type="float"/>
		
		<copy type="integer" writeargument="UserIndex"/>
		<element type="integer"/>

		<element type="integer">
			<copy type="integer" writeargument="Amount" />			
			<option value="0" event="stop"/>
		</element>

		<element type="integer"/>

		<element type="float">
			<copy type="float" writevariable="attackerX"/>
		</element>

		<element type="float">
			<copy type="float" writevariable="attackerY"/>
		</element>

		<element type="float">
			<copy type="float" writevariable="attackerZ"/>
			<copy type="integer" readlocation="attacker" writeargument="AttackerIndex"/>
		</element>		
	</message>


	<message name="WeapPickup" event="weapon_pickup">
		<copy type="integer" writeargument="UserIndex"/>
		<element type="integer">
			<copy type="integer" writeargument="Weapon" />
		</element>
	</message>
	
	<message name="TextMsg">
		<variable name="arg3type" type="integer"/>		
		<copy name="UserIndex" type="integer" writeargument="0"/>
		<copy type="integer" value="0" writevariable="arg3type"/>
		
		<element type="integer"/>

		<element type="string">
			<option value="#Detpack_set" event="detpack_planting">
				<copy type="integer" value="1" writevariable="arg3type"/>
			</option>
			
			<option value="#Detpack_finishset" event="detpack_planted" />
			<option value="#Detpack_retrieve" event="detpack_aborted" />
			
			<option value="#FITH" event="detpack_exploded" />
			<option value="#Build_stop" event="build_aborted" />
			
			<option value="#Build_nobuild" event="build_illegal" />

			<option value="#Sentry_built" event="build_complete">
				<copy type="string" value="sentry" writeargument="Type" />
			</option>
			<option value="#Sentry_upgrade" event="build_upgrade">
				<copy type="string" value="sentry" writeargument="Type" />
				<copy type="integer" value="2" writevariable="arg3type"/>
			</option>
			<option value="#Sentry_dismantle" event="build_dismantle">
				<copy type="string" value="sentry" writeargument="Type" />
			</option>
			<option value="#Sentry_destroyed" event="build_destroy">
				<copy type="string" value="sentry" writeargument="Type" />
			</option>
			<option value="#Dispenser_built" event="build_complete">
				<copy type="string" value="dispenser" writeargument="Type" />
			</option>
			<option value="#Dispenser_dismantle" event="build_dismantle">
				<copy type="string" value="dispenser" writeargument="Type" />
			</option>
			<option value="#Dispenser_destroyed" event="build_destroy">
				<copy type="string" value="dispenser" writeargument="Type" />
			</option>
		</element>
		<element type="string">
			<switch type="integer" readvariable="arg3type">
				<option value="1">
					<copy type="integer" writeargument="1" />
				</option>
				<option value="2">
					<copy type="integer" writeargument="2" />
				</option>
			</switch>
		</element>
	</message>
	
	<message name="StatusText">				
		<copy name="UserIndex" type="integer" writeargument="0"/>
		<element type="integer"/>

		<element type="string">
			<option value="#Engineer_building" event="build_start" />
		</element>
	</message>

	<message name="CurWeapon" event="weapon_stored">
		<copy type="integer" writeargument="UserIndex"/>
		<element type="integer">			
			<option value="1" event="weapon_change"/>			
		</element>
		<element type="integer">
			<copy type="integer" writeargument="Weapon" />			
		</element>
		<element type="integer">
			<copy type="integer" writeargument="Ammo" />
		</element>
	</message>

	<message name="AmmoX" event="ammo_change" log="false">
		<copy type="integer" writeargument="UserIndex"/>
		<element type="integer">
			<copy type="integer" writeargument="Weapon" />			
		</element>
		<element type="integer">
			<copy type="integer" writeargument="Ammo" />
		</element>
	</message>
	

	<message name="AmmoPickup" event="ammo_pickup">
		<copy type="integer" writeargument="UserIndex"/>
		<element type="integer">
			<copy type="integer" writeargument="Type"/>
		</element>
		<element type="integer">
			<copy type="integer" writeargument="Quantity"/>
		</element>
	</message>

	<message name="ItemPickup" event="item_pickup">
		<copy type="integer" writeargument="UserIndex"/>
		<element type="string">
			<copy type="string" writeargument="Name"/>
		</element>
	</message>


	<message name="ScoreInfo" event="player_score">
		<element type="integer">
			<copy type="integer" writeargument="UserIndex" />
		</element>
		<element type="integer">
			<copy type="integer" writeargument="Kills" />
		</element>
		<element type="integer">
			<copy type="integer" writeargument="Deaths" />
		</element>		
	</message>
	
	
	<message name="ResetHUD" event="player_spawn">
		<copy type="integer" writeargument="UserIndex"/>
	</message>
		
	
	<message name="StatusIcon">
		<variable name="carried" type="integer" />
		<copy type="integer" writeargument="0"/>
		<element type="integer">
			<copy type="integer" writevariable="carried" />
			<copy type="integer" writeargument="1" /> 
		</element>
		<element type="string">
			<option value="flag_blue">			
				<switch type="integer" readvariable="carried">
					<option value="1" event="flag_pickup"/>
					<option value="0" event="flag_dropped"/>
				</switch>
			</option>
			<option value="flag_red">
				<switch type="integer" readvariable="carried">
					<option value="1" event="flag_pickup"/>
					<option value="0" event="flag_dropped"/>
				</switch>
			</option>
			<option value="flag_green">
				<switch type="integer" readvariable="carried">
					<option value="1" event="flag_pickup"/>
					<option value="0" event="flag_dropped"/>
				</switch>
			</option>
			<option value="flag_yellow">
				<switch type="integer" readvariable="carried">
					<option value="1" event="flag_pickup"/>
					<option value="0" event="flag_dropped"/>
				</switch>
			</option>
		</element>
		<element type="integer"/>
		<element type="string">
			<copy type="string" writeargument="1" />
			<switch type="integer" readvariable="carried">
				<option value="1" event="grenade_held"/>
				<option value="0" event="grenade_thrown"/>
			</switch>
		</element>
	</message>
	
	<message name="StatusValue" log="false" />
	<message name="VGUIMenu" log="false" />

	<message name="TeamScore" event="team_score">
		<element type="string">
			<option value="Blue">
				<copy type="integer" value="1" writeargument="Team"/>
			</option>
			<option value="Red">
				<copy type="integer" value="2" writeargument="Team"/>
			</option>
			<option value="Green">
				<copy type="integer" value="3" writeargument="Team"/>
			</option>
			<option value="Yellow">
				<copy type="integer" value="4" writeargument="Team"/>
			</option>
		</element>
		<element type="integer">
			<copy type="integer" writeargument="Score" />
		</element>
		<element type="integer">
			<copy type="integer" writeargument="Deaths" />
		</element>		
	</message>


</eventmap>
